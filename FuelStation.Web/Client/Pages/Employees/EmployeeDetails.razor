@page "/employeelist/details/{Id:int?}"
@attribute [Authorize(Roles = "Manager")]
@inject HttpClient httpClient
@using FuelStation.Model;
@using FuelStation.Web.Shared;
@inject NavigationManager navigationManager
<ShopTitle></ShopTitle>


@if (isLoading && Employee == null) {
    <div class="spinner-border text-secondary" role="status">
    </div>  
} else {
    <h3>Employee Details</h3>
        <div class="row">
            <div class="col-md-6">
                <label class="form-label">Name</label>
            <input class="form-control" @bind="@Employee.Name" disabled />
            </div>
            <div class="col-md-6">
                <label class="form-label">Surname</label>
                    <input class="form-control" @bind="@Employee.Surname" disabled/>
            </div>
            <div class="col-md-6">
                <label class="form-label">Salary Per Month</label>
                <input class="form-control" @bind="@Employee.SalaryPerMonth" disabled/>
            </div>
            <div class="col-md-6">
                <label class="form-label">Hire Date Start</label>
                <input class="form-control" @bind="@Employee.HireDateStart" disabled/>
            </div>
            <div class="col-md-6">
                <label class="form-label">Hire Date End</label>
                        <input class="form-control" @bind="@Employee.HireDateEnd" disabled/>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col">
            <div class="col">
                    <BootstrapButton ButtonType = "BootstrapButtonType.Secondary" OnClick="OnCancel">Back</BootstrapButton>
            </div>
            </div>

        </div>
    @if (Employee.Transactions != null && Employee.Transactions.Count() > 0) {
            <div class="row mt-5">
                <h4 class="col-xs-6">
                    Employee's Transactions:
                </h4>
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Date</th>
                            <th>Payment Method</th>
                            <th>Total Value</th>
                        </tr>
                    </thead>
                    <tbody>
                    @foreach (var transaction in Employee.Transactions) {
                            <tr>
                                <td>@transaction.Date</td>
                                <td>@transaction.PaymentMethod</td>
                                <td>@transaction.TotalValue</td>
                            </tr>
                         }
                    </tbody>
                </table>
            </div>
        }
}
@code {
    [Parameter] public int? Id { get; set; }
    EmployeeDetailsDto? Employee { get; set; }
    bool isLoading { get; set; } = true;

    protected override async Task OnInitializedAsync() {
        if (Id == null) {
            //Employee = new();
        } else {
            var tempProduct = await httpClient.GetFromJsonAsync<EmployeeDetailsDto?>($"/employee/details/{Id}");
            if (tempProduct is not null) {
                Employee = tempProduct;
            }
        }
        isLoading = false;
    }
    private void OnCancel() {
        navigationManager.NavigateTo("employeelist");
    }
}
