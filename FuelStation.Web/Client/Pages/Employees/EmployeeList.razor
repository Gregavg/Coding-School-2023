@page "/employeelist"
@inject HttpClient httpClient
@attribute [Authorize(Roles = "Manager")]
@inject NavigationManager navigationManager
@inject IJSRuntime jsRuntime
@using FuelStation.Web.Shared;
<ShopTitle></ShopTitle>


@if (isLoading) {
    <div class="spinner-border text-secondary" role="status"></div>
} else {
    
    <h3>Employees</h3>
    <h4><u>Managers</u></h4>
    <table class="table table-striped table-hover mt-3">
        <thead>
            <tr>
                <th>Name</th>
                <th>Surname</th>
                <th>Salary Per Month</th>
                <th>Employee Type</th>
                <th>Hire Date Start</th>
                <th>Hire Date End</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in employeeList) {
                @if (employee.EmployeeType == Model.Enums.EmployeeType.Manager) {
                    <tr>
                    <td>@employee.Name</td>
                    <td>@employee.Surname</td>
                    <td>@employee.SalaryPerMonth €</td>
                    <td>@employee.EmployeeType</td>
                    <td>@employee.HireDateStart</td>
                    <td>@employee.HireDateEnd</td>
                    <td>
                        <BootstrapButton ButtonType="BootstrapButtonType.Warning" OnClick="()=> EditItem(employee)">Edit</BootstrapButton>
                        <BootstrapButton ButtonType="BootstrapButtonType.Primary" OnClick="()=> DetailItem(employee)">Details</BootstrapButton>
                        <BootstrapButton ButtonType="BootstrapButtonType.Danger" OnClick="()=> DeleteItem(employee)">Delete</BootstrapButton>
                    </td>
                </tr>
                }
            }
        </tbody>
    </table>
    <h4><u>Cashiers</u></h4>
    <table class="table table-striped table-hover mt-3">
        <thead>
            <tr>
                <th>Name</th>
                <th>Surname</th>
                <th>Salary Per Month</th>
                <th>Employee Type</th>
                <th>Hire Date Start</th>
                <th>Hire Date End</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in employeeList) {
                @if(employee.EmployeeType == Model.Enums.EmployeeType.Cashier){
                <tr>
                    <td>@employee.Name</td>
                    <td>@employee.Surname</td>
                    <td>@employee.SalaryPerMonth €</td>
                    <td>@employee.EmployeeType</td>
                    <td>@employee.HireDateStart</td>
                    <td>@employee.HireDateEnd</td>
                    <td>
                        <BootstrapButton ButtonType="BootstrapButtonType.Warning" OnClick="()=> EditItem(employee)">Edit</BootstrapButton>
                        <BootstrapButton ButtonType="BootstrapButtonType.Primary" OnClick="()=> DetailItem(employee)">Details</BootstrapButton>
                        <BootstrapButton ButtonType="BootstrapButtonType.Danger" OnClick="()=> DeleteItem(employee)">Delete</BootstrapButton>
                    </td>
                </tr>
                }
            }
        </tbody>
    </table>
    <h4><u>Staff</u></h4>
    <table class="table table-striped table-hover mt-3">
        <thead>
            <tr>
                <th>Name</th>
                <th>Surname</th>
                <th>Salary Per Month</th>
                <th>Employee Type</th>
                <th>Hire Date Start</th>
                <th>Hire Date End</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in employeeList) {
                @if (employee.EmployeeType == Model.Enums.EmployeeType.Staff) {
                    <tr>
                    <td>@employee.Name</td>
                    <td>@employee.Surname</td>
                    <td>@employee.SalaryPerMonth €</td>
                    <td>@employee.EmployeeType</td>
                    <td>@employee.HireDateStart</td>
                    <td>@employee.HireDateEnd</td>
                    <td>
                        <BootstrapButton ButtonType="BootstrapButtonType.Warning" OnClick="()=> EditItem(employee)">Edit</BootstrapButton>
                        <BootstrapButton ButtonType="BootstrapButtonType.Primary" OnClick="()=> DetailItem(employee)">Details</BootstrapButton>
                        <BootstrapButton ButtonType="BootstrapButtonType.Danger" OnClick="()=> DeleteItem(employee)">Delete</BootstrapButton>
                    </td>
                </tr>
                }
            }
        </tbody>
    </table>
    <BootstrapButton ButtonType="BootstrapButtonType.Success" OnClick="CreateItem">Create</BootstrapButton>
}

@code {
    private List<EmployeeListDto> employeeList = new();
    bool isLoading { get; set; } = true;

    protected override async Task OnInitializedAsync() {
        await LoadItemsFromServer();
        isLoading = false;
    }

    private async Task LoadItemsFromServer() {
        var tempEmployeeList = await httpClient.GetFromJsonAsync<List<EmployeeListDto>>("employee");
        if (tempEmployeeList is not null) {
            employeeList = tempEmployeeList;
        } 
    }

    private void CreateItem() {
        navigationManager.NavigateTo("employeeList/edit");
    }

    private void EditItem(EmployeeListDto employee) {
        navigationManager.NavigateTo($"employeeList/edit/{employee.Id}");
    }

    private async Task DeleteItem(EmployeeListDto employee) {
        var confirm = await jsRuntime.InvokeAsync<bool>("confirm", "Delete Item. Are you sure?");
        if (confirm) {
            var response = await httpClient.DeleteAsync($"employee/{employee.Id}");
            if (response.IsSuccessStatusCode)
            {
                await LoadItemsFromServer();
            }
            else { 
                var error = await response.Content.ReadAsStringAsync();
                await jsRuntime.InvokeVoidAsync("alert", error);
            }
        }
    }

    private void DetailItem(EmployeeListDto employee) {
        navigationManager.NavigateTo($"employeeList/details/{employee.Id}");
    }
}
